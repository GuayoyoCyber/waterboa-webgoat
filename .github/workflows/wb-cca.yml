
name: login and pull image ACR

on:
  push:
    branches: develop

jobs:
  login:
    runs-on: ubuntu-latest
    steps:
      -
        name: Login to ACR
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.ACR_GUAYOYO_URL }}
          username: ${{ secrets.ACR_GUAYOYO_USER }}
          password: ${{ secrets.ACR_GUAYOYO_TOKEN }}
          
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17
          architecture: x64
      
      -
        name: Pull image from docker
        run: docker pull ${{ secrets.ACR_GUAYOYO_URL }}/wb-cca-clair
      
      -
        name: Compile Project
        run:  mvn clean package -DskipTests
        #Compile project, so we can analyze project content and dependencies
        
      -
        name: Run image from docker
        run: docker run --rm -e SENDGRID_API_KEY='${{ secrets.SENDGRID_API_KEY }}' -e FROM_ADDR='${{ secrets.WB_MAIL_FROM }}' -e TO_ADDR='${{ secrets.WB_MAIL_TO }}' -e MAIL_SJT='Container Composition Analysis' -e MAIL_BODY='Clair Results' -e FILE_PATH='gl-container-scanning-report.json' -e ATCH_TYPE='application/json' -e ATCH_NAME='amazona-clair-report.json' -e ATCH_ID='004' -e ATCH_DISP= -e ARTIFACT=guayoyo.azurecr.io/$(imageName):$(Build.BuildId) -e TIMESTAMP=$(timestamp) -v '${{ github.workspace }}:/src' ${{ secrets.ACR_GUAYOYO_URL }}/wb-cca-clair:latest
        
        #docker run --rm -e SENDGRID_API_KEY='${{ secrets.SENDGRID_API_KEY }}' -e FROM_ADDR='${{ secrets.WB_MAIL_FROM }}' -e TO_ADDR='${{ secrets.WB_MAIL_TO }}' -e MAIL_SJT='Software Composition Analysis' -e MAIL_BODY='SCA Results' -e FILE_PATH='/report/dependency-check-report.html' -e ATCH_TYPE='text/html' -e ATCH_NAME='webgoat-dependency-check-report.html' -e ATCH_ID='001' -e ATCH_DISP='' -v '${{ github.workspace }}:/src' ${{ secrets.ACR_GUAYOYO_URL }}/wb-sca-dependencycheck-java:latest         
        #wb-cca-clair
